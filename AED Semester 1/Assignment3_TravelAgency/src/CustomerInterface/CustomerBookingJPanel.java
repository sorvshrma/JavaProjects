/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CustomerInterface;

import Business.AirlinerDetails;
import Business.AirlinerDirectory;
import Business.CustomerDirectory;
import Business.FlightDetails;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harry
 */
public class CustomerBookingJPanel extends javax.swing.JPanel {

    /**
     * Creates new form customerBooking
     */
    private AirlinerDirectory airDir;
    private JPanel cardSequencePanel;
    private CustomerDirectory cusDir;

    public CustomerBookingJPanel(JPanel cardSequencePanel, AirlinerDirectory airDir, CustomerDirectory cusDir) {
        initComponents();
        this.airDir = airDir;
        this.cardSequencePanel = cardSequencePanel;
        this.cusDir = cusDir;

        //populate();
    }

    public void populate() {
        DefaultTableModel dtm = (DefaultTableModel) resultTable.getModel();
        dtm.setRowCount(0);

        for (AirlinerDetails a : airDir.getAirliner()) {
            for (FlightDetails f : a.getFlightDirectory().getFlightDetails()) {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0] = f.getFrom();
                row[1] = f.getTo();
                row[2] = f.getPrice();
                row[3] = f;
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fromLbl = new javax.swing.JLabel();
        toLbl = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();
        seatBtn = new javax.swing.JButton();
        bookFlightLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();
        fromTF = new javax.swing.JTextField();
        toTF = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fromLbl.setText("From");
        add(fromLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, -1, -1));

        toLbl.setText("To");
        add(toLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, -1, -1));

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        add(searchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 60, -1, -1));

        seatBtn.setText("Check Seats");
        seatBtn.setEnabled(false);
        seatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatBtnActionPerformed(evt);
            }
        });
        add(seatBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 230, -1, -1));

        bookFlightLbl.setText("Book Flight");
        add(bookFlightLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, -1));

        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "From", "To", "Price", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(resultTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 450, 110));

        fromTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromTFActionPerformed(evt);
            }
        });
        add(fromTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 80, -1));

        toTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toTFActionPerformed(evt);
            }
        });
        add(toTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 80, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        if (fromTF.getText() != "" || toTF.getText() != "") {
            DefaultTableModel dtm = (DefaultTableModel) resultTable.getModel();
            dtm.setRowCount(0);

            for (AirlinerDetails a : airDir.getAirliner()) {
                for (FlightDetails f : a.getFlightDirectory().getFlightDetails()) {
                    if (f.getFrom().equalsIgnoreCase(fromTF.getText()) && f.getTo().equalsIgnoreCase(toTF.getText())) {
                        Object[] row = new Object[dtm.getColumnCount()];
                        row[0] = f.getFrom();
                        row[1] = f.getTo();
                        row[2] = f.getPrice();
                        row[3] = f;
                        dtm.addRow(row);
                    }
                }
            }
            if (dtm.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "No matched flight", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                seatBtn.setEnabled(true);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Enter source and destination", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void seatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = resultTable.getSelectedRow();
        if (selectedRow >= 0) {
            FlightDetails fdet = (FlightDetails) resultTable.getValueAt(selectedRow, 3);
            SeatAvailability seatPanel = new SeatAvailability(cardSequencePanel, fdet, cusDir);
            cardSequencePanel.add(seatPanel);
            CardLayout layout = (CardLayout) cardSequencePanel.getLayout();
            layout.next(cardSequencePanel);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Flight!!");
        }
    }//GEN-LAST:event_seatBtnActionPerformed

    private void toTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toTFActionPerformed

    private void fromTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fromTFActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bookFlightLbl;
    private javax.swing.JLabel fromLbl;
    private javax.swing.JTextField fromTF;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable resultTable;
    private javax.swing.JButton searchBtn;
    private javax.swing.JButton seatBtn;
    private javax.swing.JLabel toLbl;
    private javax.swing.JTextField toTF;
    // End of variables declaration//GEN-END:variables
}
