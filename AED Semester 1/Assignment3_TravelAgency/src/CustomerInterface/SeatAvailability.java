/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CustomerInterface;

import Business.CustomerDetails;
import Business.CustomerDirectory;
import Business.FlightDetails;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author harry
 */
public class SeatAvailability extends javax.swing.JPanel {

    /**
     * Creates new form SeatAvailability
     */
    private JPanel cardSequencePanel;
    private FlightDetails fdet;
    private CustomerDirectory cusDir;
    private CustomerBookingJPanel prevJpanel;
    private int aisle;
    private int middle;
    private int window;
    private String from;
    private String to;
    private String type;
    private String price;
    private String seat;
    /*private ArrayList<String> aisleArray;
     private ArrayList<String> windowArray;
     private ArrayList<String> middleArray;*/

    SeatAvailability(JPanel cardSequencePanel, FlightDetails fdet, CustomerDirectory cusDir) {
        initComponents();
        this.cardSequencePanel = cardSequencePanel;
        this.fdet = fdet;
        this.cusDir = cusDir;
        aisle = fdet.getAisle();
        middle = fdet.getMiddle();
        window = fdet.getWindow();

        if (aisle > 0) {
            aisleTF.setText(String.valueOf(aisle));
        } else {
            aisleTF.setText("0");
        }
        if (middle > 0) {
            middleTF.setText(String.valueOf(middle));
        } else {
            middleTF.setText("0");
        }
        if (window > 0) {
            windowTF.setText(String.valueOf(window));
        } else {
            windowTF.setText("0");
        }

        /*aisleArray = fdet.getAisleArray();
         for(String a : aisleArray){
         aisleCombo.addItem(a);
         }
        
         windowArray = fdet.getWindowArray();
         for(String a : windowArray){
         windowCombo.addItem(a);
         }
        
         middleArray = fdet.getMiddleArray();
         for(String a : middleArray){
         middleCombo.addItem(a);
         }*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        seatLbl = new javax.swing.JLabel();
        aisleLbl = new javax.swing.JLabel();
        middleLbl = new javax.swing.JLabel();
        windowLbl = new javax.swing.JLabel();
        windowTF = new javax.swing.JTextField();
        aisleTF = new javax.swing.JTextField();
        middleTF = new javax.swing.JTextField();
        chooseLbl = new javax.swing.JLabel();
        bookBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        customerLbl = new javax.swing.JLabel();
        nameLbl = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        ageLbl = new javax.swing.JLabel();
        ageTF = new javax.swing.JTextField();
        dobLbl = new javax.swing.JLabel();
        dobChooser = new com.toedter.calendar.JDateChooser();
        chooseCombo = new javax.swing.JComboBox();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        seatLbl.setText("Seat Selection");
        add(seatLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        aisleLbl.setText("Aisle");
        add(aisleLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, -1, -1));

        middleLbl.setText("Middle");
        add(middleLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, -1, -1));

        windowLbl.setText("Window");
        add(windowLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, -1, -1));

        windowTF.setEditable(false);
        add(windowTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 50, -1));

        aisleTF.setEditable(false);
        add(aisleTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 50, -1));

        middleTF.setEditable(false);
        add(middleTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 50, -1));

        chooseLbl.setText("Choose Seat");
        add(chooseLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        bookBtn.setText("Book>>");
        bookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookBtnActionPerformed(evt);
            }
        });
        add(bookBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 260, -1, -1));

        backBtn.setText("<<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 260, -1, -1));

        customerLbl.setText("Customer details to book ticket");
        add(customerLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, -1, -1));

        nameLbl.setText("Name");
        add(nameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, -1, -1));

        nameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTFActionPerformed(evt);
            }
        });
        add(nameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 90, -1));

        ageLbl.setText("Age");
        add(ageLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 120, -1, -1));

        ageTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageTFActionPerformed(evt);
            }
        });
        add(ageTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, 90, -1));

        dobLbl.setText("DOB");
        add(dobLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, -1, -1));
        add(dobChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 150, -1, -1));

        chooseCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aisle", "Middle", "Window" }));
        add(chooseCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void bookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookBtnActionPerformed
        // TODO add your handling code here:

        if (nameTF.getText().isEmpty() || ageTF.getText().isEmpty() || dobChooser.getDate().toString().isEmpty()) {
            JOptionPane.showMessageDialog(null, "All fields required", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            try {

                //aisleCombo.removeItem(aisleCombo.getSelectedItem());
                //middleCombo.removeItem(middleCombo.getSelectedItem());
                //windowCombo.removeItem(windowCombo.getSelectedItem());
                int a = Integer.parseInt(ageTF.getText());
                CustomerDetails cdet = cusDir.addCustomer();
                cdet.setName(nameTF.getText());
                cdet.setAge(a);
                cdet.setDob(dobChooser.getDate());
                cdet.setSeat(chooseCombo.getSelectedItem().toString());

                if (chooseCombo.getSelectedItem() == "Aisle") {
                    //fdet.setAisle(--aisle);
                    int a1 = fdet.decreaseAisle(aisle);
                    if (a1 < 0) {
                        JOptionPane.showMessageDialog(null, "Seats are full for the chosen category", "ERROR", JOptionPane.ERROR_MESSAGE);
                        return;
                    } else {
                        JOptionPane.showMessageDialog(null, "Flight Booked Successfully");
                    }
                    //aisleArray.remove(aisleCombo.getSelectedItem());
                    //fdet.setAisleArray(aisleArray);
                } else if (chooseCombo.getSelectedItem() == "Middle") {
                    //fdet.setMiddle(--middle);
                    int m1 = fdet.decreaseMiddle(middle);
                    if (m1 < 0) {
                        JOptionPane.showMessageDialog(null, "Seats are full for the chosen category", "ERROR", JOptionPane.ERROR_MESSAGE);
                        return;
                    } else {
                        JOptionPane.showMessageDialog(null, "Flight Booked Successfully");
                    }
                    //middleArray.remove(middleCombo.getSelectedItem());
                    //fdet.setMiddleArray(middleArray);
                } else if (chooseCombo.getSelectedItem() == "Window") {
                    //fdet.setWindow(--window);
                    int w1 = fdet.decreaseWindow(window);
                    if (w1 < 0) {
                        JOptionPane.showMessageDialog(null, "Seats are full for the chosen category", "ERROR", JOptionPane.ERROR_MESSAGE);
                        return;
                    } else {
                        JOptionPane.showMessageDialog(null, "Flight Booked Successfully");
                    }
                    //windowArray.remove(windowCombo.getSelectedItem());
                    //fdet.setWindowArray(windowArray);
                }

                TicketJPanel ticketPanel = new TicketJPanel(cardSequencePanel, cdet, fdet, chooseCombo.getSelectedItem().toString());
                cardSequencePanel.add(ticketPanel);
                CardLayout layout = (CardLayout) cardSequencePanel.getLayout();
                layout.next(cardSequencePanel);

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Enter valid data", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_bookBtnActionPerformed

    private void nameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTFActionPerformed

    private void ageTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageTFActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        cardSequencePanel.remove(this);
        CardLayout layout = (CardLayout) cardSequencePanel.getLayout();
        layout.previous(cardSequencePanel);

        Component[] components = cardSequencePanel.getComponents();
        for (Component c : components) {
            if (c instanceof CustomerBookingJPanel) {
                prevJpanel = (CustomerBookingJPanel) c;
                prevJpanel.populate();
            }
        }
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ageLbl;
    private javax.swing.JTextField ageTF;
    private javax.swing.JLabel aisleLbl;
    private javax.swing.JTextField aisleTF;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton bookBtn;
    private javax.swing.JComboBox chooseCombo;
    private javax.swing.JLabel chooseLbl;
    private javax.swing.JLabel customerLbl;
    private com.toedter.calendar.JDateChooser dobChooser;
    private javax.swing.JLabel dobLbl;
    private javax.swing.JLabel middleLbl;
    private javax.swing.JTextField middleTF;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField nameTF;
    private javax.swing.JLabel seatLbl;
    private javax.swing.JLabel windowLbl;
    private javax.swing.JTextField windowTF;
    // End of variables declaration//GEN-END:variables
}
