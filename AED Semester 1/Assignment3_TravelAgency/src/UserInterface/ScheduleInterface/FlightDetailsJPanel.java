/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ScheduleInterface;

import Business.AirlinerDetails;
import Business.FlightDetails;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harry
 */
public class FlightDetailsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form FlightDetails
     */
    private JPanel cardSequencePanel;
    private AirlinerDetails airDet;

    FlightDetailsJPanel(JPanel cardSequencePanel, AirlinerDetails airDet) {
        initComponents();
        this.cardSequencePanel = cardSequencePanel;
        this.airDet = airDet;
        airlinerTF.setText(airDet.toString());
        populate();
    }

    public void populate() {
        DefaultTableModel dtm = (DefaultTableModel) flightTable.getModel();
        dtm.setRowCount(0);

        for (FlightDetails f : airDet.getFlightDirectory().getFlightDetails()) {
            Object[] row = new Object[dtm.getColumnCount()];
            row[0] = f.getFrom();
            row[1] = f.getTo();
            row[2] = f.getPrice();
            row[3] = f;
            if ((f.getAisle() + f.getMiddle() + f.getWindow()) < 0) {
                row[4] = 0;
            } else {
                row[4] = f.getAisle() + f.getMiddle() + f.getWindow();
            }
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manageFlightLbl = new javax.swing.JLabel();
        airlinerNameLbl = new javax.swing.JLabel();
        airlinerTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        flightTable = new javax.swing.JTable();
        viewAirlineBtn = new javax.swing.JButton();
        addAirlineBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        manageFlightLbl.setText("Manage Flight Details");
        add(manageFlightLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, -1, -1));

        airlinerNameLbl.setText("Airliner Name");
        add(airlinerNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, -1, -1));

        airlinerTF.setEditable(false);
        add(airlinerTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 90, -1));

        flightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "From", "To", "Type", "Price", "Number of Seats"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(flightTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, 480, 150));

        viewAirlineBtn.setText("View/Update Airline");
        viewAirlineBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAirlineBtnActionPerformed(evt);
            }
        });
        add(viewAirlineBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, -1, -1));

        addAirlineBtn.setText("Add Airline");
        addAirlineBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAirlineBtnActionPerformed(evt);
            }
        });
        add(addAirlineBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, -1, -1));

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 260, -1, -1));

        backBtn.setText("<<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 300, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void viewAirlineBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAirlineBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = flightTable.getSelectedRow();
        if (selectedRow >= 0) {
            FlightDetails fdet = (FlightDetails) flightTable.getValueAt(selectedRow, 3);
            ViewFlightJPanel viewPanel = new ViewFlightJPanel(cardSequencePanel, fdet);
            cardSequencePanel.add(viewPanel);
            CardLayout layout = (CardLayout) cardSequencePanel.getLayout();
            layout.next(cardSequencePanel);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
    }//GEN-LAST:event_viewAirlineBtnActionPerformed

    private void addAirlineBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAirlineBtnActionPerformed
        // TODO add your handling code here:
        CreateFlightJPanel createPanel = new CreateFlightJPanel(cardSequencePanel, airDet);
        cardSequencePanel.add(createPanel);
        CardLayout layout = (CardLayout) cardSequencePanel.getLayout();
        layout.next(cardSequencePanel);
    }//GEN-LAST:event_addAirlineBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = flightTable.getSelectedRow();
        if (selectedRow >= 0) {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete??", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                FlightDetails fdet = (FlightDetails) flightTable.getValueAt(selectedRow, 3);
                airDet.getFlightDirectory().removeFlight(fdet);
                populate();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        cardSequencePanel.remove(this);
        CardLayout layout = (CardLayout) cardSequencePanel.getLayout();
        layout.previous(cardSequencePanel);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAirlineBtn;
    private javax.swing.JLabel airlinerNameLbl;
    private javax.swing.JTextField airlinerTF;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTable flightTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel manageFlightLbl;
    private javax.swing.JButton viewAirlineBtn;
    // End of variables declaration//GEN-END:variables
}
